syntax = "proto3";

package subscription.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "subscription/v1/cronspec.proto";

option go_package = "github.com/crypto-org-chain/chain-main/x/subscription/types";

// Msg defines the bank Msg service.
service Msg {
    rpc CreatePlan(MsgCreatePlan) returns (MsgCreatePlanResponse);
    rpc StopPlan(MsgStopPlan) returns (MsgStopPlanResponse);
    rpc CreateSubscription(MsgCreateSubscription) returns (MsgCreateSubscriptionResponse);
    rpc StopSubscription(MsgStopSubscription) returns (MsgStopSubscriptionResponse);
    rpc StopUserSubscription(MsgStopUserSubscription) returns (MsgStopUserSubscriptionResponse);
}

message MsgCreatePlan {
    string owner = 1;
    string title = 2;
    string description = 3;
    repeated cosmos.base.v1beta1.Coin price = 4 [
        (gogoproto.nullable)     = false,
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
        (gogoproto.moretags)     = "yaml:\"price\""
    ];
    uint32 duration_secs = 5;
    CronSpec cron_spec = 6 [(gogoproto.nullable) = false];
    int32 tzoffset = 7;  // in seconds
}

message MsgCreatePlanResponse {
    uint64 plan_id = 1 [(gogoproto.jsontag) = "plan_id", (gogoproto.moretags) = "yaml:\"plan_id\""];
}

message MsgStopPlan {
    string owner = 1;
    uint64 plan_id = 2 [(gogoproto.jsontag) = "plan_id", (gogoproto.moretags) = "yaml:\"plan_id\""];
}
message MsgStopPlanResponse {}

message MsgCreateSubscription {
    string subscriber = 1;
    uint64 plan_id = 2 [(gogoproto.jsontag) = "plan_id", (gogoproto.moretags) = "yaml:\"plan_id\""];
}
message MsgCreateSubscriptionResponse {
    uint64 subscription_id = 1 [(gogoproto.jsontag) = "subscription_id", (gogoproto.moretags) = "yaml:\"subscription_id\""];
}

message MsgStopSubscription {
    string subscriber = 1;
    uint64 subscription_id = 2 [(gogoproto.jsontag) = "subscription_id", (gogoproto.moretags) = "yaml:\"subscription_id\""];
}
message MsgStopSubscriptionResponse {}

message MsgStopUserSubscription {
    string plan_owner = 1;
    uint64 subscription_id = 2 [(gogoproto.jsontag) = "subscription_id", (gogoproto.moretags) = "yaml:\"subscription_id\""];
}
message MsgStopUserSubscriptionResponse {}
